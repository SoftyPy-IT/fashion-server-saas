---
components:
  schemas:
    Order:
      properties:
        _id:
          type: string
        billingAddress:
          properties:
            city:
              type: string
            country:
              type: string
            line1:
              type: string
            line2:
              type: string
            postalCode:
              type: string
            state:
              type: string
          type: object
        company:
          type: string
        couponCode:
          type: string
        discount:
          type: number
        email:
          type: string
        hasCoupon:
          type: boolean
        name:
          type: string
        orderDate:
          format: date-time
          type: string
        orderItems:
          items:
            properties:
              price:
                type: number
              productId:
                type: string
              quantity:
                type: number
              variants:
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            type: object
          type: array
        orderTotal:
          type: number
        paymentMethod:
          enum: [PayPal, Skrill, Bank-in, Cash On Delivery]
          type: string
        phone:
          type: string
        shippingAddress:
          properties:
            city:
              type: string
            country:
              type: string
            line1:
              type: string
            line2:
              type: string
            phone:
              type: string
            postalCode:
              type: string
            state:
              type: string
          type: object
        status:
          enum: [pending, processing, shipped, delivered, cancelled]
          type: string
        tax:
          type: number
      type: object
    OrderCreate:
      properties:
        billingAddress:
          properties:
            city:
              type: string
            country:
              type: string
            line1:
              type: string
            line2:
              type: string
            postalCode:
              type: string
            state:
              type: string
          type: object
        company:
          type: string
        couponCode:
          type: string
        email:
          type: string
        hasCoupon:
          type: boolean
        name:
          type: string
        orderItems:
          items:
            properties:
              price:
                type: number
              productId:
                type: string
              quantity:
                type: number
              variants:
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            type: object
          type: array
        orderTotal:
          type: number
        paymentMethod:
          enum: [PayPal, Skrill, Bank-in, Cash On Delivery]
          type: string
        phone:
          type: string
        shippingAddress:
          properties:
            city:
              type: string
            country:
              type: string
            line1:
              type: string
            line2:
              type: string
            phone:
              type: string
            postalCode:
              type: string
            state:
              type: string
          type: object
      type: object
    OrderUpdate:
      properties:
        billingAddress:
          properties:
            city:
              type: string
            country:
              type: string
            line1:
              type: string
            line2:
              type: string
            postalCode:
              type: string
            state:
              type: string
          type: object
        company:
          type: string
        couponCode:
          type: string
        email:
          type: string
        hasCoupon:
          type: boolean
        name:
          type: string
        orderItems:
          items:
            properties:
              price:
                type: number
              productId:
                type: string
              quantity:
                type: number
              variants:
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            type: object
          type: array
        orderTotal:
          type: number
        phone:
          type: string
        shippingAddress:
          properties:
            city:
              type: string
            country:
              type: string
            line1:
              type: string
            line2:
              type: string
            phone:
              type: string
            postalCode:
              type: string
            state:
              type: string
          type: object
      type: object
info:
  title: Your API Documentation
  version: 1.0.0
paths:
  /orders/all:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: A list of orders
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: []
      summary: Get all orders
      tags:
        - Orders
  /orders/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
      summary: Create a new order
      tags:
        - Orders
  /orders/status/{id}:
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  enum: [pending, processing, shipped, delivered, cancelled]
                  example: shipped
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order status updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Order not found
      security:
        - bearerAuth: []
      summary: Update order status
      tags:
        - Orders
  /orders/{id}:
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Order not found
      security:
        - bearerAuth: []
      summary: Delete an order
      tags:
        - Orders
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order details
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Order not found
      security:
        - bearerAuth: vscode-yaml-sort.array.1
      summary: Get order by ID
      tags:
        - Orders
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Order not found
      security:
        - bearerAuth: []
      summary: Update an order
      tags:
        - Orders
securitySchemes:
  bearerAuth:
    bearerFormat: JWT
    scheme: bearer
    type: http
swagger: 3.1.0
