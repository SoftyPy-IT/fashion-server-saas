swagger: '3.1.0'
info:
  title: Your API Documentation
  version: 1.0.0
paths:
  /user/change-password:
    post:
      tags:
        - User service
      summary: Change user password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '201':
          description: Password changed successfully
        '409':
          description: Conflict - User already exists
        '500':
          description: Internal Server Error

  /user/change-status/{userId}:
    patch:
      tags:
        - User service
      summary: Change user status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeStatus'
      responses:
        '201':
          description: Status changed successfully
        '409':
          description: Conflict - User already exists
        '500':
          description: Internal Server Error

  /user/update-profile:
    post:
      tags:
        - User service
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      responses:
        '201':
          description: Profile updated successfully
        '409':
          description: Conflict - User already exists
        '500':
          description: Internal Server Error

  /user/change-role/{userId}:
    patch:
      tags:
        - User service
      summary: Change user role
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRole'
      responses:
        '201':
          description: Role changed successfully
        '409':
          description: Conflict - User already exists
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      tags:
        - User service
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '500':
          description: Internal Server Error

  /user/all:
    get:
      tags:
        - User service
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '500':
          description: Internal Server Error

  /user/{userId}:
    get:
      tags:
        - User service
      summary: Get user details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal Server Error

    delete:
      tags:
        - User service
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '500':
          description: Internal Server Error

components:
  schemas:
    ChangePassword:
      properties:
        newPassword:
          default: johnDoe20!@
          type: string
        oldPassword:
          default: johnDoe20!@
          type: string
      required:
        - oldPassword
        - newPassword
      type: object

    ChangeStatus:
      properties:
        status:
          default: active
          type: string
      required:
        - status
      type: object

    UpdateProfile:
      properties:
        address:
          properties:
            address:
              default: 123 Main St
              type: string
            city:
              default: New York
              type: string
            country:
              default: NY
              type: string
            postalCode:
              default: 10001
              type: string
          type: object
        avatar:
          default: https://example.com/avatar.jpg
          type: string
        dateOfBirth:
          default: 1990-01-01T00:00:00.000Z
          format: date
          type: string
        firstName:
          default: John
          type: string
        lastName:
          default: Doe
          type: string
        phone:
          default: 1234567890
          type: string
      required:
        - firstName
        - lastName
        - phone
        - dateOfBirth
        - address
        - avatar
      type: object

    ChangeRole:
      properties:
        role:
          default: user
          type: string
      required:
        - role
      type: object

security:
  - bearerAuth: []

securitySchemes:
  bearerAuth:
    bearerFormat: JWT
    scheme: bearer
    type: http
